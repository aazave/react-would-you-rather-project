{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\ReactProjects\\\\reactnd-project-would-you-rather-starter\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport Question from './Question';\n\nclass QuestionsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      toggle: true\n    };\n  }\n\n  render() {\n    if (this.props.authedID === null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    }\n\n    toggleHandler = () => {\n      this.setState(currentState => ({\n        toggle: !currentState.toggle\n      }));\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Questions List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dashboard-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleHandler,\n          children: \"Toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), this.state.toggle ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Unanswered Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), this.props.unansweredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Question, {\n              id: question.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Answered Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), this.props.answeredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Question, {\n              id: question.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 37\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions,\n  users\n}) => {\n  const user = users[authedUser];\n  const answers = user.answers;\n  return {\n    answeredQuestions: Object.values(questions).filter(question => {\n      for (var key in answers) {\n        if (question.id === key) {\n          return true;\n        }\n      }\n\n      return false;\n    }),\n    unansweredQuestions: Object.values(questions).filter(question => {\n      for (var key in answers) {\n        if (question.id === key) {\n          return false;\n        }\n      }\n\n      return true;\n    })\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(QuestionsList));","map":{"version":3,"sources":["C:/Dev/ReactProjects/reactnd-project-would-you-rather-starter/src/components/QuestionsList.js"],"names":["React","Component","connect","Link","withRouter","Redirect","Question","QuestionsList","state","toggle","render","props","authedID","toggleHandler","setState","currentState","unansweredQuestions","map","question","id","answeredQuestions","mapStateToProps","authedUser","questions","users","user","answers","Object","values","filter","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter, Redirect } from 'react-router-dom'\r\nimport Question from './Question'\r\n\r\nclass QuestionsList extends Component {\r\n    state = {\r\n        toggle: true\r\n    }\r\n    render() {\r\n\r\n        if (this.props.authedID === null) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        toggleHandler = () => {\r\n            this.setState((currentState) => ({\r\n                toggle: !currentState.toggle\r\n            }))\r\n\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3 className='center'>Questions List:</h3>\r\n                <ul className='dashboard-list'>\r\n                    <button onClick={this.toggleHandler}>Toggle</button>\r\n                    {this.state.toggle ?\r\n                        <div>\r\n                            <h1>Unanswered Questions:</h1>\r\n                            {this.props.unansweredQuestions.map((question) => (\r\n                                <li key={question.id}>\r\n                                    <Question id={question.id} />\r\n                                    <br></br>\r\n                                </li>\r\n                            ))}\r\n                        </div>\r\n                        : <div>\r\n                            <h1>Answered Questions:</h1>\r\n                            {this.props.answeredQuestions.map((question) => (\r\n                                <li key={question.id}>\r\n                                    <Question id={question.id} />\r\n                                    <br></br>\r\n                                </li>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, questions, users }) => {\r\n    const user = users[authedUser]\r\n    const answers = user.answers\r\n    return {\r\n        answeredQuestions: Object.values(questions).filter((question) => {\r\n            for (var key in answers) {\r\n                if (question.id === key) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }),\r\n        unansweredQuestions: Object.values(questions).filter((question) => {\r\n            for (var key in answers) {\r\n                if (question.id === key) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        })\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionsList))"]},"metadata":{},"sourceType":"module"}