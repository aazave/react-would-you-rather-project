{"ast":null,"code":"import { saveQuestion, saveQuestionAnswer } from '../utils/api';\nimport { showLoading, hideLoading } from 'react-redux-loading';\nimport { addQuestionAnswer } from '../actions/users';\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS';\nexport const ADD_QUESTION = 'ADD_QUESTION';\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION';\nexport function receiveQuestions(questions) {\n  return {\n    type: RECEIVE_QUESTIONS,\n    questions\n  };\n}\nexport function addQuestion(question) {\n  return {\n    type: ADD_QUESTION,\n    question\n  };\n}\nexport function answerQuestion(authedUser, qid, answer) {\n  return {\n    type: ANSWER_QUESTION,\n    authedUser,\n    qid,\n    answer\n  };\n}\nexport function handleAnswerQuestion(qid, answer) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    }).then(() => dispatch(answerQuestion(authedUser, qid, answer))).then(() => dispatch(addQuestionAnswer(authedUser, qid, answer))).then(() => dispatch(hideLoading()));\n  };\n}\nexport function handleAddQuestion(optionOneText, optionTwoText) {\n  return (dispatch, getState) => {\n    const {\n      authedUser\n    } = getState();\n    dispatch(showLoading());\n    return saveQuestion({\n      optionOneText,\n      optionTwoText,\n      authedUser\n    }).then(question => dispatch(addQuestion(question))).then(() => dispatch(addUserQuestion(authedUser, optionOneText, optionTwoText))).then(() => dispatch(hideLoading()));\n  };\n}","map":{"version":3,"sources":["C:/Dev/ReactProjects/reactnd-project-would-you-rather-starter/src/actions/questions.js"],"names":["saveQuestion","saveQuestionAnswer","showLoading","hideLoading","addQuestionAnswer","RECEIVE_QUESTIONS","ADD_QUESTION","ANSWER_QUESTION","receiveQuestions","questions","type","addQuestion","question","answerQuestion","authedUser","qid","answer","handleAnswerQuestion","dispatch","getState","then","handleAddQuestion","optionOneText","optionTwoText","addUserQuestion"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,kBAAvB,QAAiD,cAAjD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,qBAAzC;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AAEA,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AAEP,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AACxC,SAAO;AACHC,IAAAA,IAAI,EAAEL,iBADH;AAEHI,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AAClC,SAAO;AACHF,IAAAA,IAAI,EAAEJ,YADH;AAEHM,IAAAA;AAFG,GAAP;AAIH;AAED,OAAO,SAASC,cAAT,CAAwBC,UAAxB,EAAoCC,GAApC,EAAyCC,MAAzC,EAAiD;AACpD,SAAO;AACHN,IAAAA,IAAI,EAAEH,eADH;AAEHO,IAAAA,UAFG;AAGHC,IAAAA,GAHG;AAIHC,IAAAA;AAJG,GAAP;AAMH;AAED,OAAO,SAASC,oBAAT,CAA8BF,GAA9B,EAAmCC,MAAnC,EAA2C;AAC9C,SAAO,CAACE,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAM;AAAEL,MAAAA;AAAF,QAAiBK,QAAQ,EAA/B;AAEAD,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AAEA,WAAOD,kBAAkB,CAAC;AACtBa,MAAAA,UADsB;AAEtBC,MAAAA,GAFsB;AAGtBC,MAAAA;AAHsB,KAAD,CAAlB,CAKFI,IALE,CAKG,MAAMF,QAAQ,CAACL,cAAc,CAACC,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAf,CALjB,EAMFI,IANE,CAMG,MAAMF,QAAQ,CAACd,iBAAiB,CAACU,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAlB,CANjB,EAOFI,IAPE,CAOG,MAAMF,QAAQ,CAACf,WAAW,EAAZ,CAPjB,CAAP;AAQH,GAbD;AAcH;AAED,OAAO,SAASkB,iBAAT,CAA2BC,aAA3B,EAA0CC,aAA1C,EAAyD;AAC5D,SAAO,CAACL,QAAD,EAAWC,QAAX,KAAwB;AAC3B,UAAM;AAAEL,MAAAA;AAAF,QAAiBK,QAAQ,EAA/B;AAEAD,IAAAA,QAAQ,CAAChB,WAAW,EAAZ,CAAR;AAEA,WAAOF,YAAY,CAAC;AAChBsB,MAAAA,aADgB;AAEhBC,MAAAA,aAFgB;AAGhBT,MAAAA;AAHgB,KAAD,CAAZ,CAKFM,IALE,CAKIR,QAAD,IAAcM,QAAQ,CAACP,WAAW,CAACC,QAAD,CAAZ,CALzB,EAMFQ,IANE,CAMG,MAAMF,QAAQ,CAACM,eAAe,CAACV,UAAD,EAAaQ,aAAb,EAA4BC,aAA5B,CAAhB,CANjB,EAOFH,IAPE,CAOG,MAAMF,QAAQ,CAACf,WAAW,EAAZ,CAPjB,CAAP;AAQH,GAbD;AAcH","sourcesContent":["import { saveQuestion, saveQuestionAnswer } from '../utils/api'\r\nimport { showLoading, hideLoading } from 'react-redux-loading'\r\nimport { addQuestionAnswer } from '../actions/users'\r\n\r\nexport const RECEIVE_QUESTIONS = 'RECEIVE_QUESTIONS'\r\nexport const ADD_QUESTION = 'ADD_QUESTION'\r\nexport const ANSWER_QUESTION = 'ANSWER_QUESTION'\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: RECEIVE_QUESTIONS,\r\n        questions,\r\n    }\r\n}\r\n\r\nexport function addQuestion(question) {\r\n    return {\r\n        type: ADD_QUESTION,\r\n        question,\r\n    }\r\n}\r\n\r\nexport function answerQuestion(authedUser, qid, answer) {\r\n    return {\r\n        type: ANSWER_QUESTION,\r\n        authedUser,\r\n        qid,\r\n        answer\r\n    }\r\n}\r\n\r\nexport function handleAnswerQuestion(qid, answer) {\r\n    return (dispatch, getState) => {\r\n        const { authedUser } = getState()\r\n\r\n        dispatch(showLoading())\r\n\r\n        return saveQuestionAnswer({\r\n            authedUser,\r\n            qid,\r\n            answer\r\n        })\r\n            .then(() => dispatch(answerQuestion(authedUser, qid, answer)))\r\n            .then(() => dispatch(addQuestionAnswer(authedUser, qid, answer)))\r\n            .then(() => dispatch(hideLoading()))\r\n    }\r\n}\r\n\r\nexport function handleAddQuestion(optionOneText, optionTwoText) {\r\n    return (dispatch, getState) => {\r\n        const { authedUser } = getState()\r\n\r\n        dispatch(showLoading())\r\n\r\n        return saveQuestion({\r\n            optionOneText,\r\n            optionTwoText,\r\n            authedUser\r\n        })\r\n            .then((question) => dispatch(addQuestion(question)))\r\n            .then(() => dispatch(addUserQuestion(authedUser, optionOneText, optionTwoText)))\r\n            .then(() => dispatch(hideLoading()))\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}