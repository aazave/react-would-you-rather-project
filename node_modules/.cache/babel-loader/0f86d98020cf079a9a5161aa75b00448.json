{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\ReactProjects\\\\reactnd-project-would-you-rather-starter\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport Question from './Question';\n\nclass QuestionsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.authedID === null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Questions List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dashboard-list\",\n        children: [this.props.authedID, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Answered Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), this.props.answeredQuestions.map(question => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Question, {\n            id: question.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this)\n        }, question.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions,\n  users\n}) => {\n  const user = users[authedUser];\n  const answers = user.answers;\n  return {\n    answeredQuestions: Object.values(questions).filter(question => {\n      for (var key in answers) {\n        if (question.id = key) {\n          return true;\n        }\n      }\n\n      return false;\n    }),\n    //   answeredQuestions: a,\n    authedID: authedUser\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(QuestionsList));","map":{"version":3,"sources":["C:/Dev/ReactProjects/reactnd-project-would-you-rather-starter/src/components/QuestionsList.js"],"names":["React","Component","connect","Link","withRouter","Redirect","Question","QuestionsList","state","render","props","authedID","answeredQuestions","map","question","id","mapStateToProps","authedUser","questions","users","user","answers","Object","values","filter","key"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,QAA3B,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCO,KADkC,GAC1B,EAD0B;AAAA;;AAElCC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,IAA5B,EAAkC;AAC9B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,mBACK,KAAKD,KAAL,CAAWC,QADhB,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EASK,KAAKD,KAAL,CAAWE,iBAAX,CAA6BC,GAA7B,CAAkCC,QAAD,iBAC9B;AAAA,iCACI,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEA,QAAQ,CAACC;AAAvB;AAAA;AAAA;AAAA;AAAA;AADJ,WAASD,QAAQ,CAACC,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADH,CATL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAoBH;;AA5BiC;;AA+BtC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAAsC;AAC1D,QAAMC,IAAI,GAAGD,KAAK,CAACF,UAAD,CAAlB;AACA,QAAMI,OAAO,GAAGD,IAAI,CAACC,OAArB;AACA,SAAO;AACHT,IAAAA,iBAAiB,EAAEU,MAAM,CAACC,MAAP,CAAcL,SAAd,EAAyBM,MAAzB,CAAiCV,QAAD,IAAc;AAC7D,WAAK,IAAIW,GAAT,IAAgBJ,OAAhB,EAAyB;AACrB,YAAIP,QAAQ,CAACC,EAAT,GAAcU,GAAlB,EAAuB;AACnB,iBAAO,IAAP;AACH;AACJ;;AACD,aAAO,KAAP;AACH,KAPkB,CADhB;AASH;AACAd,IAAAA,QAAQ,EAAEM;AAVP,GAAP;AAYH,CAfD;;AAiBA,eAAeb,UAAU,CAACF,OAAO,CAACc,eAAD,CAAP,CAAyBT,aAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter, Redirect } from 'react-router-dom'\r\nimport Question from './Question'\r\n\r\nclass QuestionsList extends Component {\r\n    state = {}\r\n    render() {\r\n\r\n        if (this.props.authedID === null) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3 className='center'>Questions List:</h3>\r\n                <ul className='dashboard-list'>\r\n                    {this.props.authedID}\r\n                    {/* <div>Unanswered Questions:</div>\r\n                    {this.props.questionsIds.map((id) => (\r\n                        <li key={id}>\r\n                            <Question id={id} />\r\n                        </li>\r\n                    ))} */}\r\n                    <div>Answered Questions:</div>\r\n                    {this.props.answeredQuestions.map((question) => (\r\n                        <li key={question.id}>\r\n                            <Question id={question.id} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, questions, users }) => {\r\n    const user = users[authedUser]\r\n    const answers = user.answers\r\n    return {\r\n        answeredQuestions: Object.values(questions).filter((question) => {\r\n            for (var key in answers) {\r\n                if (question.id = key) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }),\r\n        //   answeredQuestions: a,\r\n        authedID: authedUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionsList))"]},"metadata":{},"sourceType":"module"}