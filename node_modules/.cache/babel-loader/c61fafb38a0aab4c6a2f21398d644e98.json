{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\ReactProjects\\\\reactnd-project-would-you-rather-starter\\\\src\\\\components\\\\QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      question,\n      user,\n      authedUser\n    } = this.props;\n    const {\n      value\n    } = this.state;\n\n    if (question === null) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This Question Doesn't Exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 20\n      }, this);\n    }\n\n    const {\n      author,\n      timestamp,\n      optionOne,\n      optionTwo,\n      id\n    } = question;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [user.name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.avatarURL,\n        alt: `Avatar of ${author}`,\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Would You Rather...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio\",\n        onChange: this.handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"one\",\n          name: \"one\",\n          checked: value === 'one'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), \" \", optionOne.text, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: \"two\",\n          name: \"two\",\n          checked: value === 'two'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), \" \", optionTwo.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: value === '',\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions,\n  users\n}, props) => {\n  const {\n    id\n  } = props.match.params;\n  const question = questions[id];\n  const user = users[question.author];\n  return {\n    authedUser,\n    question: question ? question : null,\n    user\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(QuestionPage));","map":{"version":3,"sources":["C:/Dev/ReactProjects/reactnd-project-would-you-rather-starter/src/components/QuestionPage.js"],"names":["React","Component","Link","withRouter","Redirect","connect","QuestionPage","state","value","handleChange","event","setState","target","render","question","user","authedUser","props","author","timestamp","optionOne","optionTwo","id","name","avatarURL","text","mapStateToProps","questions","users","match","params"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\n\r\nclass QuestionPage extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { question, user, authedUser } = this.props\r\n        const { value } = this.state\r\n        if (question === null) {\r\n            return <p>This Question Doesn't Exist</p>\r\n        }\r\n\r\n        const {\r\n            author, timestamp, optionOne, optionTwo, id\r\n        } = question\r\n\r\n        return (\r\n            <div>\r\n                <div><span>{user.name} asks:</span></div>\r\n                <img\r\n                    src={user.avatarURL}\r\n                    alt={`Avatar of ${author}`}\r\n                    className='avatar'\r\n                />\r\n                <div> <span>Would You Rather...</span> </div>\r\n                <div className=\"radio\" onChange={this.handleChange}>\r\n                    <input type=\"radio\" value=\"one\" name=\"one\" checked={value === 'one'}/> {optionOne.text}\r\n                    <input type=\"radio\" value=\"two\" name=\"two\" checked={value === 'two'}/> {optionTwo.text}\r\n                </div>\r\n                <button disabled={value === ''}>Submit</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, questions, users }, props) => {\r\n    const { id } = props.match.params\r\n\r\n    const question = questions[id]\r\n    const user = users[question.author]\r\n\r\n    return {\r\n        authedUser,\r\n        question: question ? question : null,\r\n        user\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionPage));"]},"metadata":{},"sourceType":"module"}