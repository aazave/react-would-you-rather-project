{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\ReactProjects\\\\reactnd-project-would-you-rather-starter\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nclass QuestionsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    if (this.props.authedID === null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"center\",\n        children: \"Questions List:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dashboard-list\",\n        children: [this.props.authedID, this.props.questionsIds.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: id\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions\n}) => {\n  return {\n    questionsIds: Object.keys(questions).sort((a, b) => questions[b].id - questions[a].id),\n    authedID: authedUser\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(QuestionsList));","map":{"version":3,"sources":["C:/Dev/ReactProjects/reactnd-project-would-you-rather-starter/src/components/QuestionsList.js"],"names":["React","Component","connect","Link","withRouter","QuestionsList","state","render","props","authedID","questionsIds","map","id","mapStateToProps","authedUser","questions","Object","keys","sort","a","b"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;AAGA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAClCK,KADkC,GAC1B,EAD0B;AAAA;;AAElCC,EAAAA,MAAM,GAAG;AAEL,QAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwB,IAA5B,EAAkC;AAC9B,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,wBACI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,mBACK,KAAKD,KAAL,CAAWC,QADhB,EAEK,KAAKD,KAAL,CAAWE,YAAX,CAAwBC,GAAxB,CAA6BC,EAAD,iBACzB;AAAA,oBACKA;AADL,WAASA,EAAT;AAAA;AAAA;AAAA;AAAA,gBADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AArBiC;;AAwBtC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAA+B;AACnD,SAAO;AACHL,IAAAA,YAAY,EAAEM,MAAM,CAACC,IAAP,CAAYF,SAAZ,EACTG,IADS,CACJ,CAACC,CAAD,EAAIC,CAAJ,KAAUL,SAAS,CAACK,CAAD,CAAT,CAAaR,EAAb,GAAkBG,SAAS,CAACI,CAAD,CAAT,CAAaP,EADrC,CADX;AAGHH,IAAAA,QAAQ,EAAEK;AAHP,GAAP;AAKH,CAND;;AAQA,eAAeV,UAAU,CAACF,OAAO,CAACW,eAAD,CAAP,CAAyBR,aAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n\r\nclass QuestionsList extends Component {\r\n    state = {}\r\n    render() {\r\n\r\n        if (this.props.authedID === null) {\r\n            return <Redirect to='/' />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h3 className='center'>Questions List:</h3>\r\n                <ul className='dashboard-list'>\r\n                    {this.props.authedID}\r\n                    {this.props.questionsIds.map((id) => (\r\n                        <li key={id}>\r\n                            {id}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, questions }) => {\r\n    return {\r\n        questionsIds: Object.keys(questions)\r\n            .sort((a, b) => questions[b].id - questions[a].id),\r\n        authedID: authedUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionsList))"]},"metadata":{},"sourceType":"module"}