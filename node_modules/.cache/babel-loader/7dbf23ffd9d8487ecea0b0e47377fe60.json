{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Dev\\\\ReactProjects\\\\reactnd-project-would-you-rather-starter\\\\src\\\\components\\\\QuestionPage.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { handleAnswerQuestion } from '../actions/questions';\nimport { addQuestionAnswer } from '../actions/users';\n\nclass QuestionPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        value: event.target.value\n      });\n    };\n\n    this.submitAnswer = e => {\n      e.preventDefault();\n      const {\n        question\n      } = this.props;\n      const {\n        value\n      } = this.state;\n      this.props.dispatch(handleAnswerQuestion(question.id, value)); // this.props.dispatch(addQuestionAnswer(\n      //     this.props.authedUser,\n      //     question.id,\n      //     value\n      // ))\n    };\n  }\n\n  render() {\n    const {\n      question,\n      answered,\n      questionAuthor\n    } = this.props;\n    const {\n      value\n    } = this.state;\n\n    if (question === null) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"This Question Doesn't Exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 20\n      }, this);\n    }\n\n    const resultMetrics = {\n      total: question.optionOne.votes.length + question.optionTwo.votes.length,\n      optionOneVotes: question.optionOne.votes.length,\n      optionTwoVotes: question.optionTwo.votes.length\n    };\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      total,\n      optionOneVotes,\n      optionTwoVotes\n    } = resultMetrics;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questionAuthor.name, \" asks:\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: questionAuthor.avatarURL,\n        alt: `Avatar of ${questionAuthor.name}`,\n        className: \"avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), !!answered ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Results:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Would you rather \", optionOne.text, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [(optionOneVotes / total * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [optionOneVotes, \" out of \", total, \" votes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Would you rather \", optionTwo.text, \"?\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [(optionTwoVotes / total * 100).toFixed(2), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [optionTwoVotes, \" out of \", total, \" votes\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 38\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.submitAnswer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Would You Rather...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 31\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"radio\",\n          onChange: this.handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"optionOne\",\n              checked: value === 'optionOne'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 34\n            }, this), \" ...\", optionOne.text, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              value: \"optionTwo\",\n              checked: value === 'optionTwo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 34\n            }, this), \" ...\", optionTwo.text, \"?\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: value === '',\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = ({\n  authedUser,\n  questions,\n  users\n}, props) => {\n  const {\n    question_id\n  } = props.match.params;\n  const question = questions[question_id];\n  const answers = users[authedUser].answers;\n  return {\n    question: question ? question : null,\n    questionAuthor: question ? users[question.author] : null,\n    answered: question ? answers[question.id] : null,\n    authedUser\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(QuestionPage));","map":{"version":3,"sources":["C:/Dev/ReactProjects/reactnd-project-would-you-rather-starter/src/components/QuestionPage.js"],"names":["React","Component","withRouter","connect","handleAnswerQuestion","addQuestionAnswer","QuestionPage","state","value","handleChange","event","setState","target","submitAnswer","e","preventDefault","question","props","dispatch","id","render","answered","questionAuthor","resultMetrics","total","optionOne","votes","length","optionTwo","optionOneVotes","optionTwoVotes","name","avatarURL","text","toFixed","mapStateToProps","authedUser","questions","users","question_id","match","params","answers","author"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { handleAnswerQuestion } from '../actions/questions'\r\nimport { addQuestionAnswer } from '../actions/users'\r\n\r\nclass QuestionPage extends Component {\r\n\r\n    state = {\r\n        value: ''\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    submitAnswer = (e) => {\r\n        e.preventDefault()\r\n        const { question } = this.props\r\n        const { value } = this.state\r\n        this.props.dispatch(handleAnswerQuestion(\r\n            question.id,\r\n            value\r\n        ))\r\n\r\n        // this.props.dispatch(addQuestionAnswer(\r\n        //     this.props.authedUser,\r\n        //     question.id,\r\n        //     value\r\n        // ))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { question, answered, questionAuthor } = this.props\r\n        const { value } = this.state\r\n\r\n        if (question === null) {\r\n            return <p>This Question Doesn't Exist</p>\r\n        }\r\n\r\n        const resultMetrics = {\r\n            total: question.optionOne.votes.length + question.optionTwo.votes.length,\r\n            optionOneVotes: question.optionOne.votes.length,\r\n            optionTwoVotes: question.optionTwo.votes.length,\r\n        }\r\n\r\n        const { optionOne, optionTwo } = question\r\n\r\n        const { total, optionOneVotes, optionTwoVotes } = resultMetrics\r\n\r\n        return (\r\n            <div>\r\n                <div><span>{questionAuthor.name} asks:</span></div>\r\n                <img\r\n                    src={questionAuthor.avatarURL}\r\n                    alt={`Avatar of ${questionAuthor.name}`}\r\n                    className='avatar'\r\n                />\r\n\r\n                {(!!answered) ?\r\n                    <div>\r\n                        <h1>Results:</h1>\r\n                        <div>\r\n                            <div>\r\n                                <span>Would you rather {optionOne.text}?</span>\r\n                                <div>{((optionOneVotes / total) * 100).toFixed(2)}%</div>\r\n                                <div>{optionOneVotes} out of {total} votes</div>\r\n                            </div>\r\n                            <div>\r\n                                <span>Would you rather {optionTwo.text}?</span>\r\n                                <div>{((optionTwoVotes / total) * 100).toFixed(2)}%</div>\r\n                                <div><span>{optionTwoVotes} out of {total} votes</span></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    : <form onSubmit={this.submitAnswer }>\r\n                        <div> <span>Would You Rather...</span> </div>\r\n                        <div className=\"radio\" onChange={this.handleChange}>\r\n                            <div><input type=\"radio\" value=\"optionOne\" checked={value === 'optionOne'} /> ...{optionOne.text}?</div>\r\n                            <div><input type=\"radio\" value=\"optionTwo\" checked={value === 'optionTwo'} /> ...{optionTwo.text}?</div>\r\n                        </div>\r\n                        <button disabled={value === ''}>Submit</button>\r\n                    </form>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ authedUser, questions, users }, props) => {\r\n    const { question_id } = props.match.params\r\n\r\n    const question = questions[question_id]\r\n    const answers = users[authedUser].answers\r\n\r\n    return {\r\n        question: question ? question : null,\r\n        questionAuthor: question ? users[question.author] : null,\r\n        answered: question ? answers[question.id] : null,\r\n        authedUser\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(QuestionPage));"]},"metadata":{},"sourceType":"module"}